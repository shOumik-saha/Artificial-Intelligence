
def Search(graph, start, goal): 
	explored = [] 
	queue = [[start]] 

	if start == goal: 
		print("Same Node") 
		return
	 
	while queue: 
		path = queue.pop(0) 
		node = path[-1] 
		
		if node not in explored: 
			neighbours = graph[node] 
			
			for neighbour in neighbours: 
				new_path = list(path) 
				new_path.append(neighbour) 
				queue.append(new_path) 
				
				if neighbour == goal: 
					print("Shortest path = ", *new_path) 
					return
			explored.append(node) 
 
	print("So sorry, but a connecting path doesn't exist :(") 
	return
 
if __name__ == "__main__":
    

	
	graph = {'A': ['B', 'J', 'G'], 
			'B': ['A', 'D'], 
			'C': ['H'], 
			'D': ['B', 'H','J'], 
			'E': ['G', 'I', 'F'], 
			'F': ['G', 'I', 'F','E'], 
			'G': ['A','J','F','E'],
            'H': ['D','F','I','C'],
            'I': ['H','F','E'],
            'J': ['A','G','D']} 
  
    
	
	Search(graph, 'A', 'C') 
